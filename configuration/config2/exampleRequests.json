

Example top level get/response


GetChildren - get the children of a path


GetChildren("."){
    "path": "." // is the root path
    // ?? "depth": num  // how far to reccurse down, 1 implied, 0 all, handled by path in returned element array childPaths ?
}

Response: {
    "status": "ok",
    "elements": [
        {
            "name": "hw",
            "displayName": "Hardware Configuration",
            "class": "compoonent",
            "path": ".hw",
            "doc": {
                "tooltip": "Click to expand the hardware configuration",
                "msg": ""
            },
			"status" : "ok",
            "children": 5,  // maybe an array here of the child paths?
			"allowedInstances": 0,
            "requiredInstances": 0
        },
        {
            "name": "sw",
            "displayName": "Software Configuration",
            "class": "category",
            "path": ".sw",
            "doc": {
                "tooltip": "Click to expand the current software configuration",
                "msg": ""
            },
			"status" : "ok",
            "children": 4,
			"allowedInstances": 0,
			"requiredInstances": 0
        }
    ]
}


Get(".sw")

Response: {
    "status": "ok",
	"path" : ".sw",
    "elements": [
        {
            "name": "esp",
            "displayName": "ESP Processes",
            "class": "instanceSet",
            "path": ".sw.esp",
            "doc": {
                "tooltip": "Click to expand or add to the list of ESP Processes",

                "msg": ""
            },
			"status" : "error"
            "children": 2,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 1,
                "type": {
                    "name": "esp",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        },
        {
            "name": "dropzones",
            "displayName": "Drop Zones",
            "class": "instanceSet",
            "path": ".sw",
            "doc": {
                "tooltip": "Click to expand and add to the current list of drop zones",
                "msg": ""
            },
            "children": 2,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 1,
                "type": {
                    "name": "",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        },

        {
            "name": "logginagents",
            "displayName": "Loggiing Agents",
            "class": "instanceSet",
            "path": ".sw.loggingagents",
            "doc": {
                "tooltip": "Click to expand and add to the current list of loggin agents",
                "msg": ""
            },
            "children": 0,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": false,
                "readonly": false,
            }
        },

        {
            "name": "singleservice",
            "displayName": "A required service",
            "class": "component",
            "path": ".sw.service",
            "doc": {
                "tooltip": "Click to expand and add to the current list of loggin agents",
                "msg": ""
            },
            "children": 2,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        }
    ]
}


Get(".sw.esp")

Response: {
    "status": "ok",
    "elements": [
        {
            "name": "esp1",
            "displayName": "esp2",
            "class": "component",
            "path": ".sw.esp.esp1",
            "doc": {
                "tooltip": "Click to view an configure this component",
                "msg": ""
            },
            "children": 2,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        },
        {
            "name": "esp2",
            "displayName": "esp2",
            "class": "component",
            "path": ".sw.esp.esp2",
            "doc": {
                "tooltip": "Click to view an configure this component",
                "msg": ""
            },
            "children": 2,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        }
    ]
}


Get(".sw.esp.esp1")

Response: {
    "status": "ok",
    "elements": [
        {
            "name": "attributes",
            "displayName": "Attributes",
            "class": "valueSet",
            "path": ".sw.esp.esp1.attributes",
            "doc": {
                "tooltip": "Click to configure this component",
                "msg": ""
            },
            "children": 3,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        },
        {
            "name": "instances",
            "displayName": "Instnces (Bindings)",
            "class": "instanceSet",
            "path": ".sw.esp.esp2.instances",
            "doc": {
                "tooltip": "Click to view and configure bindings for this ESP",,
                "msg": ""
            },
            "children": 3,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 1,
                "type": {
                    "name": "",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        }
    ]
}


Get(".sw.esp.esp1.attributes")

Response: {
    "status": "ok",
    "elements": [
        {
            "name": "name",
            "displayName": "Name",
            "class": "value",
            "path": ".sw.esp.esp1.attributes.name",
            "doc": {
                "tooltip": "Name for this ESP Service",
                "msg": ""
            },
            "children": 0,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "string",
                    "limits": {
                        "min": 1,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [ "esp2" ],
                        "regex": [ "^[a-zA-Z][a-zA-Z0-9]+$" ]
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        },
        {
            "name": "description",
            "displayName": "Description",
            "class": "value",
            "path": ".sw.esp.esp2.attributes.description",
            "doc": {
                "tooltip": "A desciption for the service",
                "msg" : ""
            },
            "children": 0,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "string",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": false,
                "readonly": false,
            }
        },
        {
            "name": "password",
            "displayName": "Password",
            "class": "value",
            "path": ".sw.esp.esp2.attributes.password",
            "doc": {
                "tooltip": "Password",
            },
            "children": 0,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "string",
                    "limits": {
                        "min": 8,
                        "max": 12,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": [ "mask", "verify"]
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        }
    ]
}


Get(".sw.esp.esp1.instances")

Response: {
    "status": "ok",
    "elements": [
        {
            "name": "name",
            "displayName": "Name",
            "class": "value",
            "path": ".sw.esp.esp1.attributes.name",
            "doc": {
                "tooltip": "Name for this ESP Service",
                "msg": ""
            },
            "children": 0,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "string",
                    "limits": {
                        "min": 1,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [ "esp2" ],
                        "regex": [ "^[a-zA-Z][a-zA-Z0-9]+$" ]
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        },
        {
            "name": "description",
            "displayName": "Description",
            "class": "value",
            "path": ".sw.esp.esp2.attributes.description",
            "doc": {
                "tooltip": "A desciption for the service",
            },
            "children": 0,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "string",
                    "limits": {
                        "min": 0,
                        "max": 0,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": []
                },
                "currentValue": "",
                "defaultValue": "",
                "required": false,
                "readonly": false,
            }
        },
        {
            "name": "password",
            "displayName": "Password",
            "class": "value",
            "path": ".sw.esp.esp2.attributes.password",
            "doc": {
                "tooltip": "Password",
            },
            "children": 0,
            "elementData": {
                "allowedInstances": 0,
                "requiredInstances": 0,
                "type": {
                    "name": "string",
                    "limits": {
                        "min": 8,
                        "max": 12,
                        "allowList": [],
                        "disallowList" [],
                        "regex": []
                    },
                    "modifiers": [ "mask", "verify"]
                },
                "currentValue": "",
                "defaultValue": "",
                "required": true,
                "readonly": false,
            }
        }
    ]
}