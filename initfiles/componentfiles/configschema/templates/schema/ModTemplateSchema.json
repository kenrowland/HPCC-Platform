{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Schema for validating environment modification template",
    "type": "object",
    "properties": {
        "name": {
            "type": "string",
            "description" : "Name for the template"
        },
        "description": {
            "type": "string",
            "description" : "A description of the template"
        },
        "type": {
            "type": "string",
            "enum": [
                "new",
                "modification"
            ],
            "description" : "Type of template. Mainly used for filtering templates."
        },
        "environment" : {
            "$ref": "#/definitions/environment_def"
        },
        "variables": {
            "type": "array",
            "minItems": 0,
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description" : "Name of the variable to which the input is assigned. This value is available using {{name}} anywhere in the template",
                        "pattern" : "^[A-Za-z0-9_]*$"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "string",
                            "iprange",
                            "ipaddress",
                            "hostname",
                            "member_set"
                        ],
                        "description" : "The variable type."
                    },
                    "prompt": {
                        "type": "string",
                        "description" : "String shown to user during interactive input"
                    },
                    "description": {
                        "type": "string",
                        "description" : "Description of what this value represents in the template."
                    },
                    "values": {
                        "type": "array",
                        "items" : {
                            "type" : "string"
                        },
                        "description" : "Pre-assigned values"
                    },
                    "members" : {
                        "type" : "object",
                        "properties" : {
                            "names" : {
                                "type" : "array",
                                "items" : {
                                    "type" : "string"
                                }
                            },
                            "values" : {
                                "type" : "array",
                                "items" : {
                                    "type" : "array",
                                    "items" : {
                                        "type" : "string"
                                    }
                                }
                            }
                        }
                    },
                    "user_input": {
                        "type": "boolean",
                        "description" : "Set to true if user is required to provide a value for the variable in order to execute the template",
                        "default" : false
                    },
                    "prepared_value": {
                        "type": "string",
                        "description" : "Optional. Used to prepare the final value for use during template execution. Usually combined with other variable values of the form {{varname}}"
                    },
                    "global" : {
                        "type" : "boolean",
                        "default" : false,
                        "description" : "Save the value as a global variable as opposed to a local value"
                    },
                    "overwrite_ok" : {
                        "type" : "boolean",
                        "description" : "OK if variable exists, just overwrite the current value of the existing variable (use to override early defined variable values)"
                    }
                },
                "allOf" : [
                    {
                        "required" : [ "name", "type" ]
                    },
                    {
                        "oneOf" : [
                            {
                                "allOf" : [
                                    {
                                        "properties" : {
                                            "type" : {
                                                "enum" : [
                                                    "member_set"
                                                ]
                                            }
                                        },
                                        "not" : {
                                            "required" : [
                                                "values"
                                            ]
                                        }
                                    },
                                    {
                                        "properties" : {
                                            "type" : {
                                                "enum" : [
                                                    "member_set"
                                                ]
                                            }
                                        },
                                        "not" : {
                                            "required" : [
                                                "prepared_value"
                                            ]
                                        }
                                    },
                                    {
                                        "properties" : {
                                            "type" : {
                                                "enum" : [
                                                    "member_set"
                                                ]
                                            }
                                        },
                                        "not" : {
                                            "required" : [
                                                "user_input"
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "properties" : {
                                    "type" : {
                                        "enum" : [
                                            "string",
                                            "ipaddress",
                                            "iprange",
                                            "hostname"
                                        ]
                                    }
                                },
                                "not" : {
                                    "required" : [
                                        "members"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "description" : "Array of variables for template execution. Some may require user input."
        },
        "operations": {
            "type": "array",
            "minItems": 0,
            "items": {
                "$ref": "#/definitions/operation"
            }
        }
    },
    "required": [
        "name",
        "type",
        "operations"
    ],
    "definitions": {
        "operation": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "action": {
                    "type" : "string",
                    "enum": [
                        "create",
                        "modify",
                        "find",
                        "delete",
                        "include",
                        "copy",
                        "insert_raw"
                    ],
                    "description" : "Action to perform"
                }
            },
            "oneOf": [
                {
                    "properties": {
                        "action": {
                            "enum": [
                                "create"
                            ]
                        },
                        "data": {
                            "$ref": "#/definitions/create_data_info"
                        }
                    },
                    "required": [
                        "action",
                        "data"
                    ]
                },
                {
                    "properties": {
                        "action": {
                            "enum": [
                                "modify"
                            ]
                        },
                        "data": {
                            "$ref": "#/definitions/modify_data_info"
                        }
                    },
                    "required": [
                        "action",
                        "data"
                    ]
                },
                {
                    "properties": {
                        "action": {
                            "enum": [
                                "find"
                            ]
                        },
                        "data": {
                            "$ref": "#/definitions/find_data_info"
                        }
                    },
                    "required": [
                        "action"
                    ]
                },
                {
                    "properties": {
                        "action": {
                            "enum": [
                                "delete"
                            ]
                        },
                        "data": {
                            "$ref": "#/definitions/delete_data_info"
                        }
                    },
                    "required": [
                        "action"
                    ]
                },
                {
                    "properties": {
                        "action": {
                            "enum": [
                                "include"
                            ]
                        },
                        "data": {
                            "$ref": "#/definitions/include_data_info"
                        }
                    },
                    "required": [
                        "action",
                        "data"
                    ]
                },
                {
                    "properties": {
                        "action": {
                            "enum": [
                                "copy"
                            ]
                        },
                        "data": {
                            "$ref": "#/definitions/copy_data_info"
                        }
                    },
                    "required": [
                        "action",
                        "data"
                    ]
                },
                {
                    "properties": {
                        "action": {
                            "enum": [
                                "insert_raw"
                            ]
                        },
                        "data": {
                            "$ref": "#/definitions/insert_data_info"
                        }
                    },
                    "required": [
                        "action",
                        "data"
                    ]
                }
            ],
            "description" : "Definition of the operation to perform"
        },
        "create_data_info": {
            "type": "object",
            "properties": {
                "target" : {
                    "$ref" : "#/definitions/target_node_or_path"
                },
                "count": {
                    "type": "string",
                    "default" : "1",
                    "description" : "Number of times to execute the create action"
                },
                "start_index": {
                    "type": "string",
                    "defalut" : "0",
                    "description" : "Starting index for group variable value access (only applies to variable access)"
                },
                "node_type": {
                    "type": "string",
                    "pattern" : "^[A-Za-z0-9_]*$",
                    "description" : "The type of node to create (defined by the schema). Required"
                },
                "save": {
                    "$ref": "#/definitions/save_info",
                    "default" : {},
                    "description" : "Save info object for saving the created node IDs for use later"
                },
                "error_if_not_found": {
                    "type": "boolean",
                    "default" : true,
                    "description" : "Halt execution if no parent nodes selected for which this child would be created"
                },
                "node_value" : {
                    "$ref" : "#/definitions/node_value_new"
                },
                "populate_children" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Set to true to have all required children, as defined by the schema, auto populated"
                },
                "attributes": {
                    "$ref": "#/definitions/attribute_values_new"
                }
            },
            "required" : [
                "node_type",
                "target"
            ]
        },
        "modify_data_info": {
            "type": "object",
            "properties": {
                "target" : {
                    "$ref" : "#/definitions/target_node_or_path"
                },
                "start_index": {
                    "type": "string"
                },
                "save": {
                    "$ref": "#/definitions/save_info"
                },
                "error_if_not_found": {
                    "type": "boolean",
                    "default" : true
                },
                "node_value" : {
                    "$ref" : "#/definitions/node_value_mod"
                },
                "attributes": {
                    "$ref": "#/definitions/attribute_values_mod"
                }
            },
            "allOf": [
                {
                    "required" : [ "target" ]
                },
                {
                    "required": [ "attributes" ]
                },
                {
                    "not" : {
                        "required" : [ "count" ]
                    }
                }
            ]
        },
        "find_data_info": {
            "type": "object",
            "properties": {
                "target" : {
                    "$ref" : "#/definitions/target_path"
                },
                "node_type": {
                    "type": "string"
                },
                "save": {
                    "$ref": "#/definitions/save_info"
                },
                "error_if_not_found": {
                    "type": "boolean",
                    "default" : true
                },
                "create_if_not_found": {
                    "type": "boolean",
                    "default" : false
                },
                "node_value" : {
                    "$ref" : "#/definitions/node_value_ref"
                },
                "attributes": {
                    "$ref": "#/definitions/attribute_refs"
                }
            },
            "allOf" : [
                {
                    "not" : {
                        "required" : [ "count" ]
                    }
                },
                {
                    "not" : {
                        "required" : [ "start_index" ]
                    }
                },
                {
                    "required" : [ "target" ]
                }
            ]
        },
        "delete_data_info": {
            "type": "object",
            "properties": {
                "target" : {
                    "$ref" : "#/definitions/target_node_or_path"
                },
                "start_index": {
                    "type": "string"
                },
                "error_if_not_found": {
                    "type": "boolean",
                    "default" : true
                }
            },
            "allOf" : [
                {
                    "not" : {
                        "required" : [ "count" ]
                    }
                },
                {
                    "not" : {
                        "required" : [ "node_value" ]
                    }
                },
                {
                    "required" : [ "target" ]
                }
            ]
        },
        "include_data_info": {
            "type": "object",
            "properties": {
                "template_files" : {
                    "type" : "array",
                    "items" : {
                        "$ref" : "#/definitions/filepath_def"
                    }
                },
                "error_if_not_found" : {
                    "type" : "boolean",
                    "default" : true,
                    "description" : "Generate an error and halt execution if template file not found, skip operation otherwise"
                },
                "count": {
                    "type": "string",
                    "default" : "1",
                    "description" : "Number of times to execute the create action"
                },
                "start_index": {
                    "type": "string",
                    "defalut" : "0",
                    "description" : "Starting index for group variable value access (only applies to variable access)"
                },
                "template_parameters": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description" : "Name of the variable to which the input is assigned. This value is available using {{name}} anywhere in the template",
                                "pattern" : "^[A-Za-z0-9_]*$"
                            },
                            "values": {
                                "type": "array",
                                "items" : {
                                    "type" : "string"
                                },
                                "description" : "Values to assign to the variable"
                            }
                        },
                        "required": [ "name", "values" ]
                    },
                    "description" : "Array of parameter values to pass to the included template as variable values for use during execution."
                }
            },
            "allOf" : [
                {
                    "required" : [ "template_files" ]
                },
                {
                    "not" : {
                        "required" : [ "target" ]
                    }
                }
            ]

        },
        "copy_data_info" : {
            "type" : "object",
            "properties" : {
                "source" : {
                    "$ref" : "#/definitions/target_node_or_path"
                },
                "save": {
                    "$ref": "#/definitions/save_info"
                },
                "count": {
                    "type": "string",
                    "default" : "1",
                    "description" : "Number of times to execute the create action"
                },
                "start_index": {
                    "type": "string",
                    "defalut" : "0",
                    "description" : "Starting index for group variable value access (only applies to variable access)"
                },
                "error_if_not_found" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Throw an error if no nodes are selected for copy"
                },
                "include_children" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "True to copy all children of this source to the destination (attributes included)"
                },
                "destination" : {
                    "ref" : "#/definitions/copy_destination_info"
                }
            },
            "required" : [ "source", "destination" ]
        },
        "copy_destination_info" : {
            "type" : "object",
            "properties" : {
                "target" : {
                    "$ref" : "#/definitions/target_node_or_path"
                },
                "save": {
                    "$ref": "#/definitions/save_info"
                },
                "node_type": {
                    "type": "string",
                    "pattern" : "^[A-Za-z0-9_]*$",
                    "description" : "The type of node to create (defined by the schema). Required"
                },
                "copy_attributes" : {
                    "type" : "object",
                    "properties" : {
                        "select" : {
                            "type" : "string",
                            "enum" : [ "all", "list", "exclude" ],
                            "default" : "all",
                            "description" : "Indicates which attributes to copy, all is all of them, list is only those listed, exclude to exclude the listed ones"
                        },
                        "attributes": {
                            "type": "array",
                            "items" : {
                                "type" : "string"
                            },
                            "description" : "Attribute names if type is list or exclude"
                        },
                        "save_attributes": {
                            "ref" : "#/definitions/attribute_save_refs"
                        }
                    }
                }
            }
        },
        "insert_data_info" : {
            "type" : "object",
            "properties" : {
                "target" : {
                    "$ref" : "#/definitions/target_node_or_path"
                },
                "error_if_not_found" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Throw an error if no nodes are selected for copy"
                },
                "node_type" : {
                    "type" : "string",
                    "description" : "Node type of the root of the raw data that is being inserted"
                },
                "raw_data" : {
                    "type" : "string"
                }
            },
            "required" : [ "target", "node_type", "raw_data" ]
        },
        "attribute_value_mod": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "save": {
                    "$ref": "#/definitions/save_info"
                },
                "error_if_not_found" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Used for actions that are looking for the presence of the attribute"
                }
            },
            "allOf" : [
                {
                    "required": [ "name", "value" ]
                },
                {
                    "allOf" : [
                        {
                            "not" : {
                                "required" : [ "first_of" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "error_if_empty" ]
                            }
                        }
                    ]
                }
            ]
        },
        "attribute_values_mod": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/attribute_value_mod"
            }
        },
        "attribute_value_new" : {
            "type" : "object",
            "properties" : {
                "name" : {
                    "type" : "string"
                },
                "value" : {
                    "type": "string"
                },
                "save" : {
                    "$ref": "#/definitions/save_info"
                },
                "do_not_set" : {
                    "type": "boolean"
                },
                "optional" : {
                    "type" : "boolean",
                    "description" : "If true the value is not written if there is no value",
                    "default" : false
                }
            },
            "allOf" : [
                {
                    "required": [ "name", "value" ]
                },
                {
                    "allOf" : [
                        {
                            "not" : {
                                "required" : [ "error_if_not_found" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "error_if_empty" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "first_of" ]
                            }
                        }
                    ]
                }
            ]
        },
        "attribute_values_new": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/attribute_value_new"
            }
        },
        "attribute_ref" : {
            "type": "object",
            "properties": {
                "first_of" : {
                    "type" : "array",
                    "items" : {
                        "type" : "string"
                    },
                    "description" : "Finds the first attribute from the array of names"
                },
                "name": {
                    "type": "string"
                },
                "save" : {
                    "$ref": "#/definitions/save_info"
                },
                "error_if_not_found" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Throw exception if the attribute is not found"
                },
                "error_if_empty" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Requires the attribute to be present and have a value (one of first of also)"
                }
            },
            "allOf" : [
                {
                    "oneOf" : [
                        {
                            "required" : [ "name" ]
                        },
                        {
                            "required" : [ "first_of" ]
                        }
                    ]
                },
                {
                    "allOf" : [
                        {
                            "not" : {
                                "required" : [ "do_not_set" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "value" ]
                            }
                        }
                    ]
                }
            ]
        },
        "attribute_refs" : {
            "type": "array",
            "items": {
                "$ref": "#/definitions/attribute_ref"
            }
        },
        "attribute_save_ref" : {
            "type" : "object",
            "properties" : {
                "name" : {
                    "type" : "string"
                },
                "save" : {
                    "$ref" : "#/definitions/save_info"
                }
            },
            "required" : [ "name", "save" ]
        },
        "attribute_save_refs" : {
            "type": "array",
            "items": {
                "$ref": "#/definitions/attribute_save_ref"
            }
        },
        "save_info" : {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "pattern" : "^[A-Za-z0-9_]*$"
                },
                "accumulate": {
                    "type": "boolean",
                    "default" : false,
                    "description" : "Indicates if accumulating values in this variable is allowed or not. If true, variable may exist already"

                },
                "clear_first" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "If true, all variable values are deleted prior to use. Implies that the variable may already exist."
                },
                "global" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Save the value as a global variable as opposed to a local value"
                }
            },
            "required": [
                "name"
            ]
        },
        "node_value_ref" : {
            "type" : "object",
            "properties" : {
                "save": {
                    "$ref": "#/definitions/save_info"
                },
                "error_if_empty" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Halt execution if the node has no value"
                }
            }
        },
        "node_value_new" : {
            "type" : "object",
            "properties" : {
                "value" : {
                    "type" : "string"
                },
                "save": {
                    "$ref": "#/definitions/save_info",
                    "description" : "Object for saving the node's new value"
                }
            }
        },
        "node_value_mod" : {
            "type" : "object",
            "properties" : {
                "value" : {
                    "type" : "string",
                    "description" : "New value for the node"
                },
                "save": {
                    "$ref": "#/definitions/save_info",
                    "description" : "Object for saving the node value"
                },
                "error_if_empty" : {
                    "type" : "boolean",
                    "default" : false,
                    "description" : "Halt execution if the node has no value"
                }
            }
        },
        "target_node_or_path" : {
            "type" : "object",
            "properties" : {
                "path" : {
                    "type" : "string",
                    "description" : "Path to the target (xpath like syntax)"
                },
                "nodeid" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9_{}]*$",
                    "description" : "Node id of the target"
                },
                "environment" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9_{}]*$",
                    "description" : "Name of environment to target (a single override only)"
                }
            },
            "oneOf" : [
                {
                    "allOf" : [
                        {
                            "required" : [ "path" ]
                        },
                        {
                            "not" : {
                                "required" : [ "nodeid" ]
                            }
                        }
                    ]
                },
                {
                    "allOf" : [
                        {
                            "required" : [ "nodeid" ]
                        },
                        {
                            "not" : {
                                "required" : [ "path" ]
                            }
                        }
                    ]
                }
            ]
        },
        "target_path" : {
            "type" : "object",
            "properties" : {
                "path" : {
                    "type" : "string"
                },
                "environment" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9_{}]*$",
                    "description" : "Name of environment to target (a single override only)"
                }
            },
            "required" : [ "path" ]
        },
        "target_node" : {
            "type" : "object",
            "properties" : {
                "nodeid" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9_{}]*$"
                },
                "environment" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9_{}]*$",
                    "description" : "Name of environment to target (a single override only)"
                }
            },
            "required" : [ "nodeid" ]
        },
        "environment_def" : {
            "type" : "object",
            "properties" : {
                "name" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9_]*$",
                    "description" : "Either references an existing environment or names a new one described by other values in this object"
                },
                "schema_paths": {
                    "type": "array",
                    "items" : {
                        "type" : "string",
                        "pattern" : "^[A-Za-z0-9~_\\-\\/\\\\]+(?: +[A-Za-z0-9~_\\/\\\\]+)*$"
                    },
                    "description" : "Array of paths from which schema files are loaded. First entry MUST be the primary path where the master schema file is located"
                },
                "master_schema_filename" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9~_.\\-]+(?: +[A-Za-z0-9~_.\\-]+)*$",
                    "description" : "Name of master schema file"
                },
                "load" : {
                    "type" : "string",
                    "description" : "If given, this environment is loaded (not allowed with initialize)"
                },
                "initialize" : {
                    "type" : "boolean",
                    "description" : "True to create an empty environment (not allowed with load_environment)"
                },
                "write" : {
                    "type" : "string",
                    "pattern" : "^[A-Za-z0-9~_.\\-\\/\\\\{}]+(?: +[A-Za-z0-9~_.\\-\\/\\\\{}]+)*$",
                    "description" : "Filepath to where environment is serialized after template execution (leave empty or missing for no output)",
                    "default" : ""
                },
                "set_as_target" : {
                    "type" : "boolean",
                    "description" : "Set to true if this environment is the default for the template",
                    "default" : false
                }
            },
            "oneOf" : [
                {
                    "allOf" : [
                        {
                            "required" : [ "name" ]
                        },
                        {
                            "not" : {
                                "required" : [ "schema_paths" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "master_schema_filename" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "load_environment" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "initialize_empty_environment" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "write_environment" ]
                            }
                        }
                    ]
                },
                {
                    "allOf" : [
                        {
                            "required" : [ "name", "schema_paths", "master_schema_filename"]
                        },
                        {
                            "not" : {
                                "required" : [ "load_environment" ]
                            }
                        },
                        {
                            "not" : {
                                "required" : [ "initialize_empty_environment" ]
                            }
                        }
                    ]
                },
                {
                    "allOf" : [
                        {
                            "required" : [ "name", "schema_paths", "master_schema_filename"]
                        },
                        {
                            "required" : [ "load_environment" ]
                        },
                        {
                            "not" : {
                                "required" : [ "initialize_empty_environment" ]
                            }
                        }
                    ]
                },
                {
                    "allOf" : [
                        {
                            "required" : [ "name", "schema_paths", "master_schema_filename"]
                        },
                        {
                            "required" : [ "initialize_empty_environment" ]
                        },
                        {
                            "not" : {
                                "required" : [ "load_environment" ]
                            }
                        }
                    ]
                }
            ]
        },
        "filepath_def" : {
            "type" : "string",
            "pattern" : "^[A-Za-z0-9~_.\\-\\/\\\\{}]+(?: +[A-Za-z0-9~_.\\/\\\\{}]+)*$",
            "description" : "The full path to the template file, with potential variable substitutions"
        }
    }
}
